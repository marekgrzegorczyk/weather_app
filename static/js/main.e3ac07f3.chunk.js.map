{"version":3,"sources":["components/ForecastDay/ForecastDay.js","components/ExampleCity/ExampleCity.js","components/ChoosenCity/ChoosenCity.js","components/ForecastHour/ForecastHour.js","App.js","index.js"],"names":["ForecastDay","eightDayWeather","incrementedDate","incrementedDay","tempSymbol","conversion","add","nextDate","Date","setDate","getDate","finalDate","toLocaleDateString","weekday","year","month","day","slice","className","style","marginBottom","src","daily","weather","icon","alt","description","parseInt","Math","round","temp","ExampleCity","fourCities","number","list","fontSize","main","name","sys","country","textTransform","ChoosenCity","epochSunrise","sunrise","sunriseDate","toString","epochSunset","sunset","sunsetDate","margin","pressure","clouds","all","wind","speed","ForecastHour","epochDate","hourly","dt","humanDate","toLocaleString","App","useState","query","setQuery","setConversion","setAdd","setTempSymbol","setWeather","setEightDayWeather","setFourCities","isActive","setIsActive","api","useEffect","fetch","then","result4","json","search2","city","result","coord","lat","lon","result8","SevenDayArr","i","push","TwelveHourArr","j","onClick","type","placeholder","onChange","e","target","value","onKeyPress","event","key","current","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3ac07f3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ForecastDay = ({eightDayWeather, incrementedDate, incrementedDay, tempSymbol, conversion, add}) => {\r\n\r\n    let nextDate = new Date();\r\n    nextDate.setDate(nextDate.getDate() + incrementedDate);\r\n    const options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'};\r\n    const finalDate = nextDate.toLocaleDateString(\"en-US\", options).slice(0, 3)\r\n\r\n    const multiply = () => {\r\n        return ((parseInt(Math.round(eightDayWeather.daily[incrementedDay].temp.day)) * conversion) + add)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"single-day\">\r\n                <div style={{marginBottom: \"0.4rem\"}}>{finalDate}</div>\r\n                <img\r\n                    src={`https://openweathermap.org/img/wn/${eightDayWeather.daily[incrementedDay].weather[0].icon}@2x.png`}\r\n                    alt=\"weather_icon\"\r\n                    className=\"weather_icon\"\r\n                />\r\n                <div className=\"single-day__weather-desc\" >{eightDayWeather.daily[incrementedDay].weather[0].description}</div>\r\n                <div className=\"single-day__temp\">{multiply()}{tempSymbol}</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const ExampleCity = ({fourCities, number, tempSymbol, conversion, add}) => {\r\n\r\n    const multiply = () => {\r\n        return ((parseInt(Math.round(fourCities.list[number].main.temp)) * conversion) + add)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"location-box placeholder\">\r\n                <img src={`https://openweathermap.org/img/wn/${fourCities.list[number].weather[0].icon}@2x.png`}\r\n                     alt=\"weather_icon\"/>\r\n                <div>\r\n                    <div style={{fontSize: '7vh'}}>{multiply()}{tempSymbol}</div>\r\n                    <div>{fourCities.list[number].name}, {fourCities.list[number].sys.country}</div>\r\n                    <div style={{textTransform: \"capitalize\"}}>{fourCities.list[number].weather[0].description}</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const ChoosenCity = ({weather, tempSymbol, conversion, add}) => {\r\n\r\n    const multiply = () => {\r\n        return ((parseInt(Math.round(weather.main.temp)) * conversion) + add)\r\n\r\n    }\r\n\r\n    const epochSunrise = weather.sys.sunrise\r\n    const sunriseDate = new Date(epochSunrise * 1000).toString().slice(15, 21)\r\n    const epochSunset = weather.sys.sunset\r\n    const sunsetDate = new Date(epochSunset * 1000).toString().slice(15, 21)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"location-box\">\r\n                <div className=\"location-box__top\">\r\n                    <div>\r\n                        <div style={{fontSize: \"5vh\",}}>{weather.name}, {weather.sys.country}\r\n                        </div>\r\n                        <div>\r\n                            <div style={{fontSize: \"10vh\", margin: \"20px 0 5px 0\"}}>{multiply()}{tempSymbol}</div>\r\n                        </div>\r\n                        <div style={{fontSize:\"3vh\",textTransform: \"capitalize\"}}>\r\n                            <div>{weather.weather[0].description}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <img\r\n                            src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n                            alt=\"weather_icon\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"location-box__bottom\">\r\n                    <div className=\"location-box__desc\">\r\n                        <div className=\"splitter\">\r\n                            <p>Pressure</p>\r\n                            <div>{weather.main.pressure}hPa</div>\r\n                        </div>\r\n                        <div className=\"splitter\">\r\n                            <p>Cloudiness</p>\r\n                            <div> {weather.clouds.all}%</div>\r\n                        </div>\r\n                        <div className=\"splitter\">\r\n                            <p>Wind speed</p>\r\n                            <div> {weather.wind.speed}km/h</div>\r\n                        </div>\r\n                        <div className=\"splitter\">\r\n                            <p>Sunrise</p>\r\n                            <div> {sunriseDate}</div>\r\n                        </div>\r\n                        <div className=\"splitter\">\r\n                            <p>Sunset</p>\r\n                            <div> {sunsetDate}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const ForecastHour = ({eightDayWeather, incrementedDay, tempSymbol, conversion, add}) => {\r\n\r\n    const multiply = () => {\r\n        return ((parseInt(Math.round(eightDayWeather.hourly[incrementedDay].temp)) * conversion) + add)\r\n    }\r\n\r\n    const epochDate = eightDayWeather.hourly[incrementedDay].dt\r\n    const humanDate = new Date(epochDate * 1000).toLocaleString().slice(-8).slice(0, 5);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"single-hour\">\r\n                <div>{humanDate}</div>\r\n                <div>\r\n                    {multiply()}\r\n                    {tempSymbol}\r\n                </div>\r\n                {/*<div*/}\r\n                {/*    style={{textTransform: \"capitalize\"}}>{eightDayWeather.hourly[incrementedDay].weather[0].description}*/}\r\n                {/*</div>*/}\r\n\r\n                <img\r\n                    src={`https://openweathermap.org/img/wn/${eightDayWeather.hourly[incrementedDay].weather[0].icon}@2x.png`}\r\n                    alt=\"weather_icon\"\r\n                    className=\"weather_icon\"\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport './App.scss';\r\nimport {ForecastDay} from \"./components/ForecastDay/ForecastDay\"\r\nimport {ExampleCity} from \"./components/ExampleCity/ExampleCity\";\r\nimport {ChoosenCity} from \"./components/ChoosenCity/ChoosenCity\";\r\nimport {ForecastHour} from \"./components/ForecastHour/ForecastHour\";\r\n\r\nfunction App() {\r\n\r\n    const [query, setQuery] = useState('');\r\n    const [conversion, setConversion] = useState(1)\r\n    const [add, setAdd] = useState(0)\r\n    const [tempSymbol, setTempSymbol] = useState(\"°C\")\r\n    const [weather, setWeather] = useState('');\r\n    const [eightDayWeather, setEightDayWeather] = useState('');\r\n    const [fourCities, setFourCities] = useState('')\r\n    const [isActive, setIsActive] = useState('')\r\n\r\n    const api = {\r\n        key: \"3f6a2c018fef788f6169811808fd60d3\",\r\n        url: \"api.openweathermap.org/data/2.5/\"\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(`https://${api.url}group?id=2643743,2950159,2988507,3117735&units=metric&appid=${api.key}`)\r\n            .then((result4) => result4.json())\r\n            .then((result4) => {\r\n                setFourCities(result4)\r\n            })\r\n    }, [])\r\n\r\n    const search = event => {\r\n        if (event.key === \"Enter\") {\r\n            fetch(`https://${api.url}weather?q=${query}&units=metric&appid=${api.key}`)\r\n                .then((result) => result.json())\r\n                .then(result => {\r\n                    setQuery('')\r\n                    setWeather(result)\r\n                    return fetch(\r\n                        `https://${api.url}onecall?lat=${result.coord.lat}7&lon=${result.coord.lon}&exclude=minutely&units=metric&appid=3f6a2c018fef788f6169811808fd60d3`\r\n                    );\r\n                })\r\n                .then((result8) => result8.json())\r\n                .then((result8) => {\r\n                    setEightDayWeather(result8);\r\n                });\r\n        }\r\n    }\r\n\r\n    const search2 = city => {\r\n        fetch(`https://${api.url}weather?q=${city}&units=metric&appid=${api.key}`)\r\n            .then((result) => result.json())\r\n            .then(result => {\r\n                setQuery('')\r\n                setWeather(result)\r\n                return fetch(\r\n                    `https://${api.url}onecall?lat=${result.coord.lat}7&lon=${result.coord.lon}&exclude=minutely&units=metric&appid=3f6a2c018fef788f6169811808fd60d3`\r\n                );\r\n            })\r\n            .then((result8) => result8.json())\r\n            .then((result8) => {\r\n                setEightDayWeather(result8);\r\n            });\r\n    }\r\n\r\n    const changeUnit = () => {\r\n        if (tempSymbol === \"°C\") {\r\n            setConversion(2)\r\n            setAdd(32)\r\n            setTempSymbol(\"°F\")\r\n            setIsActive(\"false\")\r\n        } else {\r\n            setConversion(1)\r\n            setAdd(0)\r\n            setTempSymbol(\"°C\")\r\n            setIsActive('')\r\n        }\r\n    }\r\n\r\n    const getBack = () => {\r\n        setWeather(\"\")\r\n    }\r\n\r\n    const SevenDayArr = []\r\n    for (let i = 1; i < 8; i++) {\r\n        SevenDayArr.push(<ForecastDay eightDayWeather={eightDayWeather} incrementedDate={i}\r\n                                      incrementedDay={i} tempSymbol={tempSymbol} conversion={conversion} add={add}/>)\r\n    }\r\n\r\n    const TwelveHourArr = []\r\n    for (let j = 1; j < 13; j++) {\r\n        TwelveHourArr.push(<ForecastHour eightDayWeather={eightDayWeather}\r\n                                         incrementedDay={j} tempSymbol={tempSymbol} conversion={conversion}\r\n                                         add={add}/>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <main className=\"main\">\r\n                <div className=\"top-bar\">\r\n                    <div className=\"search-box-container\">\r\n                        <button className=\"unit-button icon\" style={{margin: \"0 5px 0 0\"}} onClick={getBack}>\r\n                            <span>&#10141;</span>\r\n                        </button>\r\n                        <input\r\n                            className=\"search-box__search-bar\"\r\n                            type=\"text\"\r\n                            placeholder=\"Find a city...\"\r\n                            onChange={e => setQuery(e.target.value)}\r\n                            value={query}\r\n                            onKeyPress={search}\r\n                        />\r\n                        <button onClick={changeUnit}\r\n                                className=\"unit-button\">{isActive ? \"°F\" : \"°C\"}\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    {(typeof weather.main !== \"undefined\") ? (\r\n                        <>\r\n                            <ChoosenCity weather={weather} tempSymbol={tempSymbol}\r\n                                         conversion={conversion} add={add}/>\r\n                            {(typeof eightDayWeather.current !== \"undefined\") ? (\r\n                                <div>\r\n                                    <div className=\"forecast-hour\">{TwelveHourArr} </div>\r\n                                    <div className=\"forecast-day\">{SevenDayArr}</div>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"future-forecast not-found\" style={{textAlign: \"center\",}}>There's no\r\n                                    daily forecast\r\n                                    for {weather.name}. </div>)}\r\n                        </>\r\n                    ) : (\r\n                        (typeof fourCities.list !== \"undefined\") ? (\r\n                            <div className=\"placeholder-wrapper\">\r\n                                <div onClick={() => search2(\"London\")} className=\"placeholder\">\r\n                                    <ExampleCity fourCities={fourCities} number={0} tempSymbol={tempSymbol}\r\n                                                 conversion={conversion} add={add}/>\r\n                                </div>\r\n                                <div onClick={() => search2(\"Berlin\")} className=\"placeholder\">\r\n                                    <ExampleCity fourCities={fourCities} number={1} tempSymbol={tempSymbol}\r\n                                                 conversion={conversion} add={add}/>\r\n                                </div>\r\n                                <div onClick={() => search2(\"Paris\")} className=\"placeholder\">\r\n                                    <ExampleCity fourCities={fourCities} number={2} tempSymbol={tempSymbol}\r\n                                                 conversion={conversion} add={add}/>\r\n                                </div>\r\n                                <div onClick={() => search2(\"Madrid\")} className=\"placeholder\">\r\n                                    <ExampleCity fourCities={fourCities} number={3} tempSymbol={tempSymbol}\r\n                                                 conversion={conversion} add={add}/>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\"\"))}\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n    <App/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}