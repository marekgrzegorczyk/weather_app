{"version":3,"sources":["components/ForecastDay/ForecastDay.js","components/ExampleCity/ExampleCity.js","components/ExampleCityReversed/ExampleCityReversed.js","components/ChoosenCity/ChoosenCity.js","components/ForecastHour/ForecastHour.js","App.js","index.js"],"names":["ForecastDay","eightDayWeather","incrementedDate","incrementedDay","tempSymbol","conversion","add","nextDate","Date","setDate","getDate","finalDate","toLocaleDateString","weekday","year","month","day","slice","className","style","marginBottom","textTransform","daily","weather","description","parseInt","Math","round","temp","src","icon","alt","ExampleCity","fourCities","number","list","name","sys","country","main","ExampleCityReversed","ChoosenCity","epochSunrise","sunrise","sunriseDate","toString","epochSunset","sunset","sunsetDate","pressure","clouds","all","wind","speed","ForecastHour","epochDate","hourly","dt","humanDate","toLocaleString","App","useState","query","setQuery","setConversion","setAdd","setTempSymbol","setWeather","setEightDayWeather","setFourCities","isActive","setIsActive","api","useEffect","fetch","then","result4","json","search2","city","result","coord","lat","lon","result8","SevenDayArr","i","push","TwelveHourArr","j","margin","onClick","type","placeholder","onChange","e","target","value","onKeyPress","event","key","current","textAlign","width","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f9c4050.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ForecastDay = ({eightDayWeather, incrementedDate, incrementedDay, tempSymbol, conversion, add}) => {\r\n\r\n    let nextDate = new Date();\r\n    nextDate.setDate(nextDate.getDate() + incrementedDate);\r\n    const options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'};\r\n    const finalDate = nextDate.toLocaleDateString(\"en-US\", options).slice(0, 3)\r\n\r\n    const multiply = () => {\r\n        return ((parseInt(Math.round(eightDayWeather.daily[incrementedDay].temp.day)) * conversion) + add)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"future-forecast-daily__single-day\">\r\n                <div className=\"future-forecast-daily__section\">\r\n                    <div style={{marginBottom:\"0.4rem\"}}>{finalDate}</div>\r\n                    <div\r\n                        style={{textTransform: \"capitalize\"}}>{eightDayWeather.daily[incrementedDay].weather[0].description}</div>\r\n                </div>\r\n                <div className=\"future-forecast-daily__2ndsection\">\r\n                    <div>{multiply()}{tempSymbol}</div>\r\n                    <img\r\n                        src={`https://openweathermap.org/img/wn/${eightDayWeather.daily[incrementedDay].weather[0].icon}@2x.png`}\r\n                        alt=\"weather_icon\"\r\n                        className=\"weather_icon\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const ExampleCity = ({fourCities,number,tempSymbol,conversion,add}) => {\r\n\r\n    const multiply = () => {\r\n        return ((parseInt(Math.round(fourCities.list[number].main.temp)) * conversion)+ add)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"location-box\">\r\n                <div className=\"location-box__section\">\r\n                    <div\r\n                        className=\"location-box__location\">{fourCities.list[number].name}, {fourCities.list[number].sys.country}</div>\r\n                    <div className=\"location-box__temp\">{multiply()}{tempSymbol}</div>\r\n                    <div className=\"location-box__city-name\">{fourCities.list[number].weather[0].description}</div>\r\n                </div>\r\n                <img className=\"weather_icon\"\r\n                     src={`https://openweathermap.org/img/wn/${fourCities.list[number].weather[0].icon}@2x.png`}\r\n                     alt=\"weather_icon\"/>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const ExampleCityReversed = ({fourCities,number,tempSymbol,conversion,add}) => {\r\n\r\n    const multiply = () => {\r\n        return ((parseInt(Math.round(fourCities.list[number].main.temp)) * conversion)+ add)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"location-box\">\r\n                <img className=\"weather_icon\"\r\n                     src={`https://openweathermap.org/img/wn/${fourCities.list[number].weather[0].icon}@2x.png`}\r\n                     alt=\"weather_icon\"/>\r\n                <div className=\"location-box__section\">\r\n                    <div\r\n                        className=\"location-box__location reversed\">{fourCities.list[number].name}, {fourCities.list[number].sys.country}</div>\r\n                    <div className=\"location-box__temp reversed\">{multiply()}{tempSymbol}</div>\r\n                    <div className=\"location-box__city-name reversed\">{fourCities.list[number].weather[0].description}</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const ChoosenCity = ({weather, tempSymbol, conversion, add}) => {\r\n\r\n    const multiply = () => {\r\n        return ((parseInt(Math.round(weather.main.temp)) * conversion) + add)\r\n\r\n    }\r\n\r\n    // let date = String(new window.Date());\r\n    // const slicedDate = date.slice(3, 21);\r\n\r\n\r\n    const epochSunrise = weather.sys.sunrise\r\n    const sunriseDate = new Date(epochSunrise * 1000).toString().slice(15, 21)\r\n    const epochSunset = weather.sys.sunset\r\n    const sunsetDate = new Date(epochSunset * 1000).toString().slice(15, 21)\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"location-box__big\">\r\n                <img className=\"weather_icon__big\"\r\n                     src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n                     alt=\"weather_icon\"/>\r\n                <div\r\n                    className=\"location-box__location__big \">{weather.name}, {weather.sys.country}</div>\r\n            </div>\r\n            <div className=\"info-box\">\r\n                <div className=\"splitter\">\r\n                    <div>Weather</div>\r\n                    <div className=\"info-box__name\">{weather.weather[0].description}</div>\r\n                </div>\r\n                <div className=\"splitter\">\r\n                    <div>Temperature</div>\r\n                    <div>{multiply()}{tempSymbol}</div>\r\n                </div>\r\n                <div className=\"splitter\">\r\n                    <div>Pressure</div>\r\n                    <div>{weather.main.pressure}hPa</div>\r\n                </div>\r\n                <div className=\"splitter\">\r\n                    <div>Cloudiness</div>\r\n                    <div>{weather.clouds.all}%</div>\r\n                </div>\r\n                <div className=\"splitter\">\r\n                    <div>Wind speed</div>\r\n                    <div>{weather.wind.speed}km/h</div>\r\n                </div>\r\n                <div className=\"splitter\">\r\n                    <div>Sunrise</div>\r\n                    <div>{sunriseDate}</div>\r\n                </div>\r\n                <div className=\"splitter last\">\r\n                    <div>Sunset</div>\r\n                    <div>{sunsetDate}</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const ForecastHour = ({eightDayWeather, incrementedDay, tempSymbol, conversion, add}) => {\r\n\r\n    const multiply = () => {\r\n        return ((parseInt(Math.round(eightDayWeather.hourly[incrementedDay].temp)) * conversion) + add)\r\n    }\r\n\r\n    const epochDate = eightDayWeather.hourly[incrementedDay].dt\r\n    const humanDate = new Date(epochDate * 1000).toLocaleString().slice(-8).slice(0,5);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"future-forecast-daily__single-day\">\r\n                <div className=\"future-forecast-daily__section\">\r\n                    <div>{humanDate}</div>\r\n                    <div\r\n                        style={{textTransform: \"capitalize\"}}>{eightDayWeather.hourly[incrementedDay].weather[0].description}</div>\r\n                </div>\r\n                <div className=\"future-forecast-daily__2ndsection\">\r\n                    <div>\r\n                        {multiply()}\r\n                        {tempSymbol}</div>\r\n                    <img\r\n                        src={`https://openweathermap.org/img/wn/${eightDayWeather.hourly[incrementedDay].weather[0].icon}@2x.png`}\r\n                        alt=\"weather_icon\"\r\n                        className=\"weather_icon\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport './App.scss';\r\nimport {ForecastDay} from \"./components/ForecastDay/ForecastDay\"\r\nimport {ExampleCity} from \"./components/ExampleCity/ExampleCity\";\r\nimport {ExampleCityReversed} from \"./components/ExampleCityReversed/ExampleCityReversed\";\r\nimport {ChoosenCity} from \"./components/ChoosenCity/ChoosenCity\";\r\nimport {ForecastHour} from \"./components/ForecastHour/ForecastHour\";\r\n\r\nfunction App() {\r\n\r\n    const [query, setQuery] = useState('');\r\n    const [conversion, setConversion] = useState(1)\r\n    const [add, setAdd] = useState(0)\r\n    const [tempSymbol, setTempSymbol] = useState(\"°C\")\r\n    const [weather, setWeather] = useState('');\r\n    const [eightDayWeather, setEightDayWeather] = useState('');\r\n    const [fourCities, setFourCities] = useState('')\r\n    const [isActive, setIsActive] = useState('')\r\n\r\n    const api = {\r\n        key: \"3f6a2c018fef788f6169811808fd60d3\",\r\n        url: \"api.openweathermap.org/data/2.5/\"\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(`https://${api.url}group?id=2643743,2950159,2988507,3117735&units=metric&appid=${api.key}`)\r\n            .then((result4) => result4.json())\r\n            .then((result4) => {\r\n                setFourCities(result4)\r\n            })\r\n    }, [])\r\n\r\n    const search = event => {\r\n        if (event.key === \"Enter\") {\r\n            fetch(`https://${api.url}weather?q=${query}&units=metric&appid=${api.key}`)\r\n                .then((result) => result.json())\r\n                .then(result => {\r\n                    setQuery('')\r\n                    setWeather(result)\r\n                    return fetch(\r\n                        `https://${api.url}onecall?lat=${result.coord.lat}7&lon=${result.coord.lon}&exclude=minutely&units=metric&appid=3f6a2c018fef788f6169811808fd60d3`\r\n                    );\r\n                })\r\n                .then((result8) => result8.json())\r\n                .then((result8) => {\r\n                    setEightDayWeather(result8);\r\n                });\r\n        }\r\n    }\r\n\r\n    const search2 = city => {\r\n        fetch(`https://${api.url}weather?q=${city}&units=metric&appid=${api.key}`)\r\n            .then((result) => result.json())\r\n            .then(result => {\r\n                setQuery('')\r\n                setWeather(result)\r\n                return fetch(\r\n                    `https://${api.url}onecall?lat=${result.coord.lat}7&lon=${result.coord.lon}&exclude=minutely&units=metric&appid=3f6a2c018fef788f6169811808fd60d3`\r\n                );\r\n            })\r\n            .then((result8) => result8.json())\r\n            .then((result8) => {\r\n                setEightDayWeather(result8);\r\n            });\r\n    }\r\n\r\n    const changeUnitFahrenheit = () => {\r\n        setConversion(2)\r\n        setAdd(32)\r\n        setTempSymbol(\"°F\")\r\n        setIsActive(\"false\")\r\n    }\r\n\r\n    const changeUnitCelsius = () => {\r\n        setConversion(1)\r\n        setAdd(0)\r\n        setTempSymbol(\"°C\")\r\n        setIsActive('')\r\n    }\r\n\r\n    const getBack = () => {\r\n        setWeather(\"\")\r\n    }\r\n\r\n    const SevenDayArr = []\r\n    for (let i = 1; i < 8; i++) {\r\n        SevenDayArr.push(<ForecastDay eightDayWeather={eightDayWeather} incrementedDate={i}\r\n                                      incrementedDay={i} tempSymbol={tempSymbol} conversion={conversion} add={add}/>)\r\n    }\r\n\r\n    const TwelveHourArr = []\r\n    for (let j = 1; j < 13; j++) {\r\n        TwelveHourArr.push(<ForecastHour eightDayWeather={eightDayWeather}\r\n                                         incrementedDay={j} tempSymbol={tempSymbol} conversion={conversion}\r\n                                         add={add}/>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <main className=\"main\">\r\n                <div className=\"search-box\">\r\n                    <div className=\"search-box-container\">\r\n                        <button className=\"unit-button icon\" style={{margin: \"0 5px 0 0\"}} onClick={getBack}>\r\n                            <span>&#10141;</span>\r\n                        </button>\r\n                        <input\r\n                            className=\"search-box__search-bar\"\r\n                            type=\"text\"\r\n                            placeholder=\"Find a city...\"\r\n                            onChange={e => setQuery(e.target.value)}\r\n                            value={query}\r\n                            onKeyPress={search}\r\n                        />\r\n                        <button onClick={changeUnitFahrenheit}\r\n                                className={`unit-button ${isActive ? \"unit-button-active\" : \"\"}`}>°F\r\n                        </button>\r\n                        <button onClick={changeUnitCelsius}\r\n                                className={`unit-button ${isActive ? \"\" : \"unit-button-active\"}`}>°C\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    {(typeof weather.main !== \"undefined\") ? (\r\n                        <div className=\"wrapper\">\r\n                            <ChoosenCity weather={weather} tempSymbol={tempSymbol}\r\n                                         conversion={conversion} add={add}/>\r\n                            {(typeof eightDayWeather.current !== \"undefined\") ? (\r\n                                <div>\r\n                                    <div className=\"future-forecast-daily shadow\">\r\n                                        <p className=\"future-forecast-daily__header\">12 Hour Forecast for {weather.name}</p>\r\n                                        <div className=\"future-forecast-daily__wrapper\">\r\n                                            {TwelveHourArr}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"future-forecast-daily shadow\">\r\n                                        <p className=\"future-forecast-daily__header\">7 Day Forecast\r\n                                            for {weather.name} </p>\r\n                                        <div className=\"future-forecast-daily__wrapper\">\r\n                                            {SevenDayArr}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"future-forecast\" style={{textAlign: \"center\"}}>There's no daily forecast\r\n                                    for {weather.name}. </div>)}\r\n                        </div>\r\n                    ) : (\r\n                        (typeof fourCities.list !== \"undefined\") ? (\r\n                            <>\r\n                                <div onClick={() => search2(\"London\")} style={{width: \"100%\"}}>\r\n                                    <ExampleCity fourCities={fourCities} number={0} tempSymbol={tempSymbol}\r\n                                                 conversion={conversion} add={add}/>\r\n                                </div>\r\n                                <div onClick={() => search2(\"Berlin\")} style={{width: \"100%\"}}>\r\n                                    <ExampleCityReversed fourCities={fourCities} number={1} tempSymbol={tempSymbol}\r\n                                                         conversion={conversion} add={add}/>\r\n                                </div>\r\n                                <div onClick={() => search2(\"Paris\")} style={{width: \"100%\"}}>\r\n                                    <ExampleCity fourCities={fourCities} number={2} tempSymbol={tempSymbol}\r\n                                                 conversion={conversion} add={add}/>\r\n                                </div>\r\n                                <div onClick={() => search2(\"Madrid\")} style={{width: \"100%\"}}>\r\n                                    <ExampleCityReversed fourCities={fourCities} number={3} tempSymbol={tempSymbol}\r\n                                                         conversion={conversion} add={add}/>\r\n                                </div>\r\n                            </>\r\n                        ) : (\"\"))}\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n    <App/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}